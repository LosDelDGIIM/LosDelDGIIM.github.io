name: Auto-merge PRs from trusted user in specific folder

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write

jobs:
  automerge:
    runs-on: ubuntu-latest
    steps:
      - name: Get PR info
        uses: actions/github-script@v7
        id: get_pr
        with:
          script: |
            const pr = context.payload.pull_request;
            core.setOutput("author", pr.user.login);
            core.setOutput("number", pr.number);

      - name: Fetch changed files
        id: files
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
            });
            core.setOutput("filenames", JSON.stringify(files.map(f => f.filename)));

      - name: Check conditions and merge
        if: ${{ steps.get_pr.outputs.author == 'jesusmuve18' }}
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const files = JSON.parse(process.env.FILES);
            const allInFolder = files.every(f => f.startsWith("subjects/Topología II/Temario/"));

            if (allInFolder) {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber,
                merge_method: "squash"
              });
              console.log(`✅ PR #${prNumber} mergeada automáticamente.`);
            } else {
              console.log(`❌ Archivos fuera de docs/, no se mergea.`);
            }
        env:
          FILES: ${{ steps.files.outputs.filenames }}

